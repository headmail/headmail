// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "https://headmail.io",
            "email": "dev@headmail.io"
        },
        "license": {
            "name": "AGPL-3.0",
            "url": "https://opensource.org/license/agpl-v3"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/campaigns": {
            "get": {
                "description": "List all campaigns",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "List all campaigns",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Tags to filter by",
                        "name": "tags[]",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Status to filter by",
                        "name": "status[]",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_admin.PaginatedListResponse-domain_Campaign"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new campaign",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "Create a new campaign",
                "parameters": [
                    {
                        "description": "Campaign to create",
                        "name": "campaign",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_headmail_headmail_pkg_api_admin_dto.CreateCampaignRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.Campaign"
                        }
                    }
                }
            }
        },
        "/campaigns/{campaignID}": {
            "get": {
                "description": "Get a campaign by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "Get a campaign by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Campaign"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a campaign",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "Update a campaign",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Campaign to update",
                        "name": "campaign",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_headmail_headmail_pkg_api_admin_dto.UpdateCampaignRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Campaign"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a campaign",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "Delete a campaign",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_admin.DeleteResponse"
                        }
                    }
                }
            }
        },
        "/campaigns/{campaignID}/deliveries": {
            "get": {
                "description": "List deliveries for a campaign",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deliveries"
                ],
                "summary": "List deliveries for a campaign",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_admin.PaginatedListResponse-domain_Delivery"
                        }
                    }
                }
            },
            "post": {
                "description": "Create deliveries for a campaign",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "Create deliveries for a campaign",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Deliveries to create",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_headmail_headmail_pkg_api_admin_dto.CreateDeliveriesRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/github_com_headmail_headmail_pkg_api_admin_dto.CreateDeliveriesResponse"
                        }
                    }
                }
            }
        },
        "/campaigns/{campaignID}/deliveries/{deliveryID}": {
            "get": {
                "description": "Get a delivery by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deliveries"
                ],
                "summary": "Get a delivery by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Delivery ID",
                        "name": "deliveryID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Delivery"
                        }
                    }
                }
            }
        },
        "/campaigns/{campaignID}/status": {
            "patch": {
                "description": "Update campaign status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "Update campaign status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Status update",
                        "name": "statusUpdate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_admin.UpdateCampaignStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/lists": {
            "get": {
                "description": "List all mailing lists",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "lists"
                ],
                "summary": "List all mailing lists",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Tags to filter by",
                        "name": "tags[]",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_admin.PaginatedListResponse-domain_List"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new mailing list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "lists"
                ],
                "summary": "Create a new mailing list",
                "parameters": [
                    {
                        "description": "List to create",
                        "name": "list",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_headmail_headmail_pkg_api_admin_dto.CreateListRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.List"
                        }
                    }
                }
            }
        },
        "/lists/{listID}": {
            "get": {
                "description": "Get a mailing list by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "lists"
                ],
                "summary": "Get a mailing list by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "List ID",
                        "name": "listID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.List"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a mailing list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "lists"
                ],
                "summary": "Update a mailing list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "List ID",
                        "name": "listID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "List to update",
                        "name": "list",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_headmail_headmail_pkg_api_admin_dto.UpdateListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.List"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a mailing list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "lists"
                ],
                "summary": "Delete a mailing list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "List ID",
                        "name": "listID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_admin.DeleteResponse"
                        }
                    }
                }
            }
        },
        "/lists/{listID}/subscribers": {
            "get": {
                "description": "List subscribers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscribers"
                ],
                "summary": "List subscribers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_admin.PaginatedListResponse-domain_Subscriber"
                        }
                    }
                }
            },
            "post": {
                "description": "Add subscribers to a list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscribers"
                ],
                "summary": "Add subscribers to a list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "List ID",
                        "name": "listID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Subscribers to add",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_admin.CreateSubscribersRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api_admin.EmptyResponse"
                        }
                    }
                }
            }
        },
        "/subscribers": {
            "get": {
                "description": "List subscribers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscribers"
                ],
                "summary": "List subscribers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_admin.PaginatedListResponse-domain_Subscriber"
                        }
                    }
                }
            }
        },
        "/subscribers/{subscriberID}": {
            "get": {
                "description": "Get a subscriber by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscribers"
                ],
                "summary": "Get a subscriber by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subscriber ID",
                        "name": "subscriberID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Subscriber"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a subscriber",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscribers"
                ],
                "summary": "Update a subscriber",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subscriber ID",
                        "name": "subscriberID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Subscriber to update",
                        "name": "subscriber",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_headmail_headmail_pkg_api_admin_dto.UpdateSubscriberRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Subscriber"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a subscriber",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscribers"
                ],
                "summary": "Delete a subscriber",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subscriber ID",
                        "name": "subscriberID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_admin.DeleteResponse"
                        }
                    }
                }
            }
        },
        "/templates": {
            "get": {
                "description": "List all templates",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "templates"
                ],
                "summary": "List all templates",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_admin.PaginatedListResponse-domain_Template"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "templates"
                ],
                "summary": "Create a new template",
                "parameters": [
                    {
                        "description": "Template to create",
                        "name": "template",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_headmail_headmail_pkg_api_admin_dto.CreateTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.Template"
                        }
                    }
                }
            }
        },
        "/templates/{templateID}": {
            "get": {
                "description": "Get a template by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "templates"
                ],
                "summary": "Get a template by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Template ID",
                        "name": "templateID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Template"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "templates"
                ],
                "summary": "Update a template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Template ID",
                        "name": "templateID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Template to update",
                        "name": "template",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_headmail_headmail_pkg_api_admin_dto.UpdateTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Template"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a template",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "templates"
                ],
                "summary": "Delete a template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Template ID",
                        "name": "templateID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_admin.DeleteResponse"
                        }
                    }
                }
            }
        },
        "/tx": {
            "post": {
                "description": "Create a new transactional delivery",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deliveries"
                ],
                "summary": "Create a new transactional delivery",
                "parameters": [
                    {
                        "description": "Transactional delivery to create",
                        "name": "delivery",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_headmail_headmail_pkg_api_admin_dto.CreateTransactionalDeliveryRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.Delivery"
                        }
                    }
                }
            }
        },
        "/tx/{deliveryID}": {
            "get": {
                "description": "Get a delivery by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deliveries"
                ],
                "summary": "Get a delivery by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Delivery ID",
                        "name": "deliveryID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Delivery"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api_admin.CreateSubscribersRequest": {
            "type": "object",
            "properties": {
                "append": {
                    "type": "boolean"
                },
                "subscribers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_headmail_headmail_pkg_api_admin_dto.CreateSubscriberRequest"
                    }
                }
            }
        },
        "api_admin.DeleteResponse": {
            "type": "object",
            "properties": {
                "deleted": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "api_admin.EmptyResponse": {
            "type": "object"
        },
        "api_admin.PaginatedListResponse-domain_Campaign": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Campaign"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/api_admin.PaginationResponse"
                }
            }
        },
        "api_admin.PaginatedListResponse-domain_Delivery": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Delivery"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/api_admin.PaginationResponse"
                }
            }
        },
        "api_admin.PaginatedListResponse-domain_List": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.List"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/api_admin.PaginationResponse"
                }
            }
        },
        "api_admin.PaginatedListResponse-domain_Subscriber": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Subscriber"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/api_admin.PaginationResponse"
                }
            }
        },
        "api_admin.PaginatedListResponse-domain_Template": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Template"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/api_admin.PaginationResponse"
                }
            }
        },
        "api_admin.PaginationResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "api_admin.UpdateCampaignStatusRequest": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/definitions/domain.CampaignStatus"
                }
            }
        },
        "domain.Campaign": {
            "type": "object",
            "properties": {
                "bounce_count": {
                    "type": "integer"
                },
                "click_count": {
                    "type": "integer"
                },
                "created_at": {
                    "description": "Unix timestamp",
                    "type": "integer"
                },
                "data": {
                    "description": "JSON data for templates",
                    "type": "object",
                    "additionalProperties": true
                },
                "deleted_at": {
                    "description": "For soft deletes",
                    "type": "integer"
                },
                "delivered_count": {
                    "type": "integer"
                },
                "failed_count": {
                    "type": "integer"
                },
                "from_email": {
                    "description": "Sender's email",
                    "type": "string"
                },
                "from_name": {
                    "description": "Sender's name",
                    "type": "string"
                },
                "headers": {
                    "description": "Additional email headers",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "description": "UUID",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the campaign",
                    "type": "string"
                },
                "open_count": {
                    "type": "integer"
                },
                "recipient_count": {
                    "description": "Calculated statistics",
                    "type": "integer"
                },
                "scheduled_at": {
                    "description": "Scheduled time for sending",
                    "type": "integer"
                },
                "sent_at": {
                    "description": "Time when sending was completed",
                    "type": "integer"
                },
                "status": {
                    "description": "Status of the campaign",
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.CampaignStatus"
                        }
                    ]
                },
                "subject": {
                    "description": "Subject template",
                    "type": "string"
                },
                "tags": {
                    "description": "Tags for categorization",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "template_html": {
                    "description": "HTML template",
                    "type": "string"
                },
                "template_id": {
                    "description": "Optional template ID",
                    "type": "string"
                },
                "template_text": {
                    "description": "Plain text template",
                    "type": "string"
                },
                "updated_at": {
                    "description": "Unix timestamp",
                    "type": "integer"
                },
                "utm_params": {
                    "description": "UTM parameters for link tracking",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "domain.CampaignStatus": {
            "type": "string",
            "enum": [
                "draft",
                "scheduled",
                "sending",
                "sent",
                "paused",
                "cancelled"
            ],
            "x-enum-varnames": [
                "CampaignStatusDraft",
                "CampaignStatusScheduled",
                "CampaignStatusSending",
                "CampaignStatusSent",
                "CampaignStatusPaused",
                "CampaignStatusCancelled"
            ]
        },
        "domain.Delivery": {
            "type": "object",
            "properties": {
                "body_html": {
                    "description": "HTML body",
                    "type": "string"
                },
                "body_text": {
                    "description": "Text body",
                    "type": "string"
                },
                "bounce_count": {
                    "description": "Number of bounces",
                    "type": "integer"
                },
                "campaign_id": {
                    "description": "Campaign ID (nullable for transactional)",
                    "type": "string"
                },
                "click_count": {
                    "description": "Number of clicks",
                    "type": "integer"
                },
                "created_at": {
                    "description": "Timestamps",
                    "type": "integer"
                },
                "data": {
                    "description": "Individual data for templates",
                    "type": "object",
                    "additionalProperties": true
                },
                "email": {
                    "description": "Recipient's email",
                    "type": "string"
                },
                "failed_at": {
                    "description": "Time of failure",
                    "type": "integer"
                },
                "failure_reason": {
                    "description": "Reason for failure",
                    "type": "string"
                },
                "headers": {
                    "description": "Individual headers",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "description": "UUID",
                    "type": "string"
                },
                "message_id": {
                    "description": "SMTP Message ID",
                    "type": "string"
                },
                "name": {
                    "description": "Recipient's name",
                    "type": "string"
                },
                "open_count": {
                    "description": "Statistics",
                    "type": "integer"
                },
                "opened_at": {
                    "description": "First open time",
                    "type": "integer"
                },
                "scheduled_at": {
                    "description": "Scheduled time",
                    "type": "integer"
                },
                "sent_at": {
                    "description": "Time of sending",
                    "type": "integer"
                },
                "status": {
                    "description": "scheduled, sending, sent, delivered, failed, bounced",
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.DeliveryStatus"
                        }
                    ]
                },
                "subject": {
                    "description": "Actual sent subject",
                    "type": "string"
                },
                "tags": {
                    "description": "Tags for categorization",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "description": "campaign, transactional",
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.DeliveryType"
                        }
                    ]
                }
            }
        },
        "domain.DeliveryStatus": {
            "type": "string",
            "enum": [
                "scheduled",
                "sending",
                "sent",
                "delivered",
                "failed",
                "bounced"
            ],
            "x-enum-varnames": [
                "DeliveryStatusScheduled",
                "DeliveryStatusSending",
                "DeliveryStatusSent",
                "DeliveryStatusDelivered",
                "DeliveryStatusFailed",
                "DeliveryStatusBounced"
            ]
        },
        "domain.DeliveryType": {
            "type": "string",
            "enum": [
                "campaign",
                "transaction"
            ],
            "x-enum-varnames": [
                "DeliveryTypeCampaign",
                "DeliveryTypeTransaction"
            ]
        },
        "domain.List": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Unix timestamp in seconds",
                    "type": "integer"
                },
                "deleted_at": {
                    "description": "For soft deletes",
                    "type": "integer"
                },
                "description": {
                    "description": "Description of the list",
                    "type": "string"
                },
                "id": {
                    "description": "UUID",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the list",
                    "type": "string"
                },
                "subscriber_count": {
                    "description": "Calculated field for subscriber count",
                    "type": "integer"
                },
                "tags": {
                    "description": "Tags for categorization",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updated_at": {
                    "description": "Unix timestamp in seconds",
                    "type": "integer"
                }
            }
        },
        "domain.Subscriber": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Unix timestamp in seconds",
                    "type": "integer"
                },
                "email": {
                    "description": "Unique email address",
                    "type": "string"
                },
                "id": {
                    "description": "UUID",
                    "type": "string"
                },
                "lists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.SubscriberList"
                    }
                },
                "name": {
                    "description": "Name of the subscriber",
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/domain.SubscriberStatus"
                },
                "updated_at": {
                    "description": "Unix timestamp in seconds",
                    "type": "integer"
                }
            }
        },
        "domain.SubscriberList": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Unix timestamp in seconds",
                    "type": "integer"
                },
                "list_id": {
                    "description": "Foreign key to the List",
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/domain.SubscriberListStatus"
                },
                "subscribed_at": {
                    "description": "Unix timestamp of subscription",
                    "type": "integer"
                },
                "unsubscribed_at": {
                    "description": "Unix timestamp of unsubscription",
                    "type": "integer"
                },
                "updated_at": {
                    "description": "Unix timestamp in seconds",
                    "type": "integer"
                }
            }
        },
        "domain.SubscriberListStatus": {
            "type": "string",
            "enum": [
                "confirmed",
                "unsubscribed",
                "bounced",
                "complained"
            ],
            "x-enum-varnames": [
                "SubscriberListStatusConfirmed",
                "SubscriberListStatusUnsubscribed",
                "SubscriberListStatusBounced",
                "SubscriberListStatusComplained"
            ]
        },
        "domain.SubscriberStatus": {
            "type": "string",
            "enum": [
                "enabled",
                "disabled"
            ],
            "x-enum-varnames": [
                "SubscriberStatusEnabled",
                "SubscriberStatusDisabled"
            ]
        },
        "domain.Template": {
            "type": "object",
            "properties": {
                "body_html": {
                    "description": "HTML content of the template",
                    "type": "string"
                },
                "body_text": {
                    "description": "Text content of the template",
                    "type": "string"
                },
                "created_at": {
                    "description": "Unix timestamp seconds",
                    "type": "integer"
                },
                "id": {
                    "description": "UUID",
                    "type": "string"
                },
                "name": {
                    "description": "Template name",
                    "type": "string"
                },
                "updated_at": {
                    "description": "Unix timestamp seconds",
                    "type": "integer"
                }
            }
        },
        "github_com_headmail_headmail_pkg_api_admin_dto.CreateCampaignRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "from_email": {
                    "type": "string"
                },
                "from_name": {
                    "type": "string"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "scheduled_at": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/domain.CampaignStatus"
                },
                "subject": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "template_html": {
                    "type": "string"
                },
                "template_text": {
                    "type": "string"
                },
                "utm_params": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "github_com_headmail_headmail_pkg_api_admin_dto.CreateDeliveriesRequest": {
            "type": "object",
            "properties": {
                "individuals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_headmail_headmail_pkg_api_admin_dto.Individual"
                    }
                },
                "lists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "scheduled_at": {
                    "type": "integer"
                }
            }
        },
        "github_com_headmail_headmail_pkg_api_admin_dto.CreateDeliveriesResponse": {
            "type": "object",
            "properties": {
                "deliveries_created": {
                    "type": "integer"
                },
                "scheduled_at": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/domain.CampaignStatus"
                }
            }
        },
        "github_com_headmail_headmail_pkg_api_admin_dto.CreateListRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github_com_headmail_headmail_pkg_api_admin_dto.CreateSubscriberRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/domain.SubscriberStatus"
                }
            }
        },
        "github_com_headmail_headmail_pkg_api_admin_dto.CreateTemplateRequest": {
            "type": "object",
            "properties": {
                "body_html": {
                    "type": "string"
                },
                "body_text": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "github_com_headmail_headmail_pkg_api_admin_dto.CreateTransactionalDeliveryRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "email": {
                    "type": "string"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github_com_headmail_headmail_pkg_api_admin_dto.Individual": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "email": {
                    "type": "string"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "github_com_headmail_headmail_pkg_api_admin_dto.UpdateCampaignRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "from_email": {
                    "type": "string"
                },
                "from_name": {
                    "type": "string"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "scheduled_at": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/domain.CampaignStatus"
                },
                "subject": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "template_html": {
                    "type": "string"
                },
                "template_text": {
                    "type": "string"
                },
                "utm_params": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "github_com_headmail_headmail_pkg_api_admin_dto.UpdateListRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github_com_headmail_headmail_pkg_api_admin_dto.UpdateSubscriberRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/domain.SubscriberStatus"
                }
            }
        },
        "github_com_headmail_headmail_pkg_api_admin_dto.UpdateTemplateRequest": {
            "type": "object",
            "properties": {
                "body_html": {
                    "type": "string"
                },
                "body_text": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Headmail API",
	Description:      "This is an email campaign API server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
