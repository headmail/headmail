components:
  schemas:
    api_admin.CreateSubscribersRequest:
      properties:
        append:
          type: boolean
        subscribers:
          items:
            $ref: '#/components/schemas/github_com_headmail_headmail_pkg_api_admin_dto.CreateSubscriberRequest'
          type: array
          uniqueItems: false
      type: object
    api_admin.DeleteResponse:
      properties:
        deleted:
          type: boolean
        message:
          type: string
      type: object
    api_admin.EmptyResponse:
      type: object
    api_admin.PaginatedListResponse-domain_Campaign:
      properties:
        data:
          items:
            $ref: '#/components/schemas/domain.Campaign'
          type: array
          uniqueItems: false
        pagination:
          $ref: '#/components/schemas/api_admin.PaginationResponse'
      type: object
    api_admin.PaginatedListResponse-domain_Delivery:
      properties:
        data:
          items:
            $ref: '#/components/schemas/domain.Delivery'
          type: array
          uniqueItems: false
        pagination:
          $ref: '#/components/schemas/api_admin.PaginationResponse'
      type: object
    api_admin.PaginatedListResponse-domain_List:
      properties:
        data:
          items:
            $ref: '#/components/schemas/domain.List'
          type: array
          uniqueItems: false
        pagination:
          $ref: '#/components/schemas/api_admin.PaginationResponse'
      type: object
    api_admin.PaginatedListResponse-domain_Subscriber:
      properties:
        data:
          items:
            $ref: '#/components/schemas/domain.Subscriber'
          type: array
          uniqueItems: false
        pagination:
          $ref: '#/components/schemas/api_admin.PaginationResponse'
      type: object
    api_admin.PaginatedListResponse-domain_Template:
      properties:
        data:
          items:
            $ref: '#/components/schemas/domain.Template'
          type: array
          uniqueItems: false
        pagination:
          $ref: '#/components/schemas/api_admin.PaginationResponse'
      type: object
    api_admin.PaginationResponse:
      properties:
        limit:
          type: integer
        page:
          type: integer
        total:
          type: integer
      type: object
    api_admin.UpdateCampaignStatusRequest:
      properties:
        status:
          type: string
          x-enum-varnames:
          - CampaignStatusDraft
          - CampaignStatusScheduled
          - CampaignStatusSending
          - CampaignStatusSent
          - CampaignStatusPaused
          - CampaignStatusCancelled
      type: object
    domain.Campaign:
      properties:
        bounce_count:
          type: integer
        click_count:
          type: integer
        created_at:
          description: Unix timestamp
          type: integer
        data:
          additionalProperties: {}
          description: JSON data for templates
          type: object
        deleted_at:
          description: For soft deletes
          type: integer
        delivered_count:
          type: integer
        failed_count:
          type: integer
        from_email:
          description: Sender's email
          type: string
        from_name:
          description: Sender's name
          type: string
        headers:
          additionalProperties:
            type: string
          description: Additional email headers
          type: object
        id:
          description: UUID
          type: string
        name:
          description: Name of the campaign
          type: string
        open_count:
          type: integer
        recipient_count:
          description: Calculated statistics
          type: integer
        scheduled_at:
          description: Scheduled time for sending
          type: integer
        sent_at:
          description: Time when sending was completed
          type: integer
        status:
          description: Status of the campaign
          type: string
          x-enum-varnames:
          - CampaignStatusDraft
          - CampaignStatusScheduled
          - CampaignStatusSending
          - CampaignStatusSent
          - CampaignStatusPaused
          - CampaignStatusCancelled
        subject:
          description: Subject template
          type: string
        tags:
          description: Tags for categorization
          items:
            type: string
          type: array
          uniqueItems: false
        template_html:
          description: HTML template
          type: string
        template_id:
          description: Optional template ID
          type: string
        template_text:
          description: Plain text template
          type: string
        updated_at:
          description: Unix timestamp
          type: integer
        utm_params:
          additionalProperties:
            type: string
          description: UTM parameters for link tracking
          type: object
      type: object
    domain.CampaignStatus:
      type: string
      x-enum-varnames:
      - CampaignStatusDraft
      - CampaignStatusScheduled
      - CampaignStatusSending
      - CampaignStatusSent
      - CampaignStatusPaused
      - CampaignStatusCancelled
    domain.Delivery:
      properties:
        body_html:
          description: HTML body
          type: string
        body_text:
          description: Text body
          type: string
        bounce_count:
          description: Number of bounces
          type: integer
        campaign_id:
          description: Campaign ID (nullable for transactional)
          type: string
        click_count:
          description: Number of clicks
          type: integer
        created_at:
          description: Timestamps
          type: integer
        data:
          additionalProperties: {}
          description: Individual data for templates
          type: object
        email:
          description: Recipient's email
          type: string
        failed_at:
          description: Time of failure
          type: integer
        failure_reason:
          description: Reason for failure
          type: string
        headers:
          additionalProperties:
            type: string
          description: Individual headers
          type: object
        id:
          description: UUID
          type: string
        message_id:
          description: SMTP Message ID
          type: string
        name:
          description: Recipient's name
          type: string
        open_count:
          description: Statistics
          type: integer
        opened_at:
          description: First open time
          type: integer
        scheduled_at:
          description: Scheduled time
          type: integer
        sent_at:
          description: Time of sending
          type: integer
        status:
          $ref: '#/components/schemas/domain.DeliveryStatus'
        subject:
          description: Actual sent subject
          type: string
        tags:
          description: Tags for categorization
          items:
            type: string
          type: array
          uniqueItems: false
        type:
          $ref: '#/components/schemas/domain.DeliveryType'
      type: object
    domain.DeliveryStatus:
      description: scheduled, sending, sent, delivered, failed, bounced
      type: string
      x-enum-varnames:
      - DeliveryStatusScheduled
      - DeliveryStatusSending
      - DeliveryStatusSent
      - DeliveryStatusDelivered
      - DeliveryStatusFailed
      - DeliveryStatusBounced
    domain.DeliveryType:
      description: campaign, transactional
      type: string
      x-enum-varnames:
      - DeliveryTypeCampaign
      - DeliveryTypeTransaction
    domain.List:
      properties:
        created_at:
          description: Unix timestamp in seconds
          type: integer
        deleted_at:
          description: For soft deletes
          type: integer
        description:
          description: Description of the list
          type: string
        id:
          description: UUID
          type: string
        name:
          description: Name of the list
          type: string
        subscriber_count:
          description: Calculated field for subscriber count
          type: integer
        tags:
          description: Tags for categorization
          items:
            type: string
          type: array
          uniqueItems: false
        updated_at:
          description: Unix timestamp in seconds
          type: integer
      type: object
    domain.Subscriber:
      properties:
        created_at:
          description: Unix timestamp in seconds
          type: integer
        email:
          description: Unique email address
          type: string
        id:
          description: UUID
          type: string
        lists:
          items:
            $ref: '#/components/schemas/domain.SubscriberList'
          type: array
          uniqueItems: false
        name:
          description: Name of the subscriber
          type: string
        status:
          type: string
          x-enum-varnames:
          - SubscriberStatusEnabled
          - SubscriberStatusDisabled
        updated_at:
          description: Unix timestamp in seconds
          type: integer
      type: object
    domain.SubscriberList:
      properties:
        created_at:
          description: Unix timestamp in seconds
          type: integer
        list_id:
          description: Foreign key to the List
          type: string
        status:
          $ref: '#/components/schemas/domain.SubscriberListStatus'
        subscribed_at:
          description: Unix timestamp of subscription
          type: integer
        unsubscribed_at:
          description: Unix timestamp of unsubscription
          type: integer
        updated_at:
          description: Unix timestamp in seconds
          type: integer
      type: object
    domain.SubscriberListStatus:
      type: string
      x-enum-varnames:
      - SubscriberListStatusConfirmed
      - SubscriberListStatusUnsubscribed
      - SubscriberListStatusBounced
      - SubscriberListStatusComplained
    domain.SubscriberStatus:
      type: string
      x-enum-varnames:
      - SubscriberStatusEnabled
      - SubscriberStatusDisabled
    domain.Template:
      properties:
        body_html:
          description: HTML content of the template
          type: string
        body_text:
          description: Text content of the template
          type: string
        created_at:
          description: Unix timestamp seconds
          type: integer
        id:
          description: UUID
          type: string
        name:
          description: Template name
          type: string
        updated_at:
          description: Unix timestamp seconds
          type: integer
      type: object
    github_com_headmail_headmail_pkg_api_admin_dto.CreateCampaignRequest:
      properties:
        data:
          additionalProperties: {}
          type: object
        from_email:
          type: string
        from_name:
          type: string
        headers:
          additionalProperties:
            type: string
          type: object
        name:
          type: string
        scheduled_at:
          type: integer
        status:
          $ref: '#/components/schemas/domain.CampaignStatus'
        subject:
          type: string
        tags:
          items:
            type: string
          type: array
          uniqueItems: false
        template_html:
          type: string
        template_text:
          type: string
        utm_params:
          additionalProperties:
            type: string
          type: object
      type: object
    github_com_headmail_headmail_pkg_api_admin_dto.CreateDeliveriesRequest:
      properties:
        individuals:
          items:
            $ref: '#/components/schemas/github_com_headmail_headmail_pkg_api_admin_dto.Individual'
          type: array
          uniqueItems: false
        lists:
          items:
            type: string
          type: array
          uniqueItems: false
        scheduled_at:
          type: integer
      type: object
    github_com_headmail_headmail_pkg_api_admin_dto.CreateDeliveriesResponse:
      properties:
        deliveries_created:
          type: integer
        scheduled_at:
          type: integer
        status:
          type: string
          x-enum-varnames:
          - CampaignStatusDraft
          - CampaignStatusScheduled
          - CampaignStatusSending
          - CampaignStatusSent
          - CampaignStatusPaused
          - CampaignStatusCancelled
      type: object
    github_com_headmail_headmail_pkg_api_admin_dto.CreateListRequest:
      properties:
        description:
          type: string
        name:
          type: string
        tags:
          items:
            type: string
          type: array
          uniqueItems: false
      type: object
    github_com_headmail_headmail_pkg_api_admin_dto.CreateSubscriberRequest:
      properties:
        email:
          type: string
        name:
          type: string
        status:
          $ref: '#/components/schemas/domain.SubscriberStatus'
      type: object
    github_com_headmail_headmail_pkg_api_admin_dto.CreateTemplateRequest:
      properties:
        body_html:
          type: string
        body_text:
          type: string
        name:
          type: string
      type: object
    github_com_headmail_headmail_pkg_api_admin_dto.CreateTransactionalDeliveryRequest:
      properties:
        data:
          additionalProperties: {}
          type: object
        email:
          type: string
        headers:
          additionalProperties:
            type: string
          type: object
        name:
          type: string
        subject:
          type: string
        tags:
          items:
            type: string
          type: array
          uniqueItems: false
      type: object
    github_com_headmail_headmail_pkg_api_admin_dto.Individual:
      properties:
        data:
          additionalProperties: {}
          type: object
        email:
          type: string
        headers:
          additionalProperties:
            type: string
          type: object
        name:
          type: string
      type: object
    github_com_headmail_headmail_pkg_api_admin_dto.UpdateCampaignRequest:
      properties:
        data:
          additionalProperties: {}
          type: object
        from_email:
          type: string
        from_name:
          type: string
        headers:
          additionalProperties:
            type: string
          type: object
        name:
          type: string
        scheduled_at:
          type: integer
        status:
          $ref: '#/components/schemas/domain.CampaignStatus'
        subject:
          type: string
        tags:
          items:
            type: string
          type: array
          uniqueItems: false
        template_html:
          type: string
        template_text:
          type: string
        utm_params:
          additionalProperties:
            type: string
          type: object
      type: object
    github_com_headmail_headmail_pkg_api_admin_dto.UpdateListRequest:
      properties:
        description:
          type: string
        name:
          type: string
        tags:
          items:
            type: string
          type: array
          uniqueItems: false
      type: object
    github_com_headmail_headmail_pkg_api_admin_dto.UpdateSubscriberRequest:
      properties:
        email:
          type: string
        name:
          type: string
        status:
          $ref: '#/components/schemas/domain.SubscriberStatus'
      type: object
    github_com_headmail_headmail_pkg_api_admin_dto.UpdateTemplateRequest:
      properties:
        body_html:
          type: string
        body_text:
          type: string
        name:
          type: string
      type: object
externalDocs:
  description: ""
  url: ""
info:
  contact:
    email: dev@headmail.io
    name: API Support
    url: https://headmail.io
  description: This is an email campaign API server.
  license:
    name: AGPL-3.0
    url: https://opensource.org/license/agpl-v3
  title: Headmail API
  version: "1.0"
openapi: 3.1.0
paths:
  /campaigns:
    get:
      description: List all campaigns
      parameters:
      - description: Page number
        in: query
        name: page
        schema:
          type: integer
      - description: Number of items per page
        in: query
        name: limit
        schema:
          type: integer
      - description: Search term
        in: query
        name: search
        schema:
          type: string
      - description: Tags to filter by
        in: query
        name: tags[]
        schema:
          items:
            type: string
          type: array
      - description: Status to filter by
        in: query
        name: status[]
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_admin.PaginatedListResponse-domain_Campaign'
          description: OK
      summary: List all campaigns
      tags:
      - campaigns
    post:
      description: Create a new campaign
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/github_com_headmail_headmail_pkg_api_admin_dto.CreateCampaignRequest'
        description: Campaign to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain.Campaign'
          description: Created
      summary: Create a new campaign
      tags:
      - campaigns
  /campaigns/{campaignID}:
    delete:
      description: Delete a campaign
      parameters:
      - description: Campaign ID
        in: path
        name: campaignID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_admin.DeleteResponse'
          description: OK
      summary: Delete a campaign
      tags:
      - campaigns
    get:
      description: Get a campaign by ID
      parameters:
      - description: Campaign ID
        in: path
        name: campaignID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain.Campaign'
          description: OK
      summary: Get a campaign by ID
      tags:
      - campaigns
    put:
      description: Update a campaign
      parameters:
      - description: Campaign ID
        in: path
        name: campaignID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/github_com_headmail_headmail_pkg_api_admin_dto.UpdateCampaignRequest'
        description: Campaign to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain.Campaign'
          description: OK
      summary: Update a campaign
      tags:
      - campaigns
  /campaigns/{campaignID}/deliveries:
    get:
      description: List deliveries for a campaign
      parameters:
      - description: Campaign ID
        in: path
        name: campaignID
        required: true
        schema:
          type: string
      - description: Page number
        in: query
        name: page
        schema:
          type: integer
      - description: Number of items per page
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_admin.PaginatedListResponse-domain_Delivery'
          description: OK
      summary: List deliveries for a campaign
      tags:
      - deliveries
    post:
      description: Create deliveries for a campaign
      parameters:
      - description: Campaign ID
        in: path
        name: campaignID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/github_com_headmail_headmail_pkg_api_admin_dto.CreateDeliveriesRequest'
        description: Deliveries to create
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/github_com_headmail_headmail_pkg_api_admin_dto.CreateDeliveriesResponse'
          description: Accepted
      summary: Create deliveries for a campaign
      tags:
      - campaigns
  /campaigns/{campaignID}/deliveries/{deliveryID}:
    get:
      description: Get a delivery by ID
      parameters:
      - description: Delivery ID
        in: path
        name: deliveryID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain.Delivery'
          description: OK
      summary: Get a delivery by ID
      tags:
      - deliveries
  /campaigns/{campaignID}/status:
    patch:
      description: Update campaign status
      parameters:
      - description: Campaign ID
        in: path
        name: campaignID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_admin.UpdateCampaignStatusRequest'
        description: Status update
        required: true
      responses:
        "204":
          description: No Content
      summary: Update campaign status
      tags:
      - campaigns
  /lists:
    get:
      description: List all mailing lists
      parameters:
      - description: Page number
        in: query
        name: page
        schema:
          type: integer
      - description: Number of items per page
        in: query
        name: limit
        schema:
          type: integer
      - description: Search term
        in: query
        name: search
        schema:
          type: string
      - description: Tags to filter by
        in: query
        name: tags[]
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_admin.PaginatedListResponse-domain_List'
          description: OK
      summary: List all mailing lists
      tags:
      - lists
    post:
      description: Create a new mailing list
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/github_com_headmail_headmail_pkg_api_admin_dto.CreateListRequest'
        description: List to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain.List'
          description: Created
      summary: Create a new mailing list
      tags:
      - lists
  /lists/{listID}:
    delete:
      description: Delete a mailing list
      parameters:
      - description: List ID
        in: path
        name: listID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_admin.DeleteResponse'
          description: OK
      summary: Delete a mailing list
      tags:
      - lists
    get:
      description: Get a mailing list by ID
      parameters:
      - description: List ID
        in: path
        name: listID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain.List'
          description: OK
      summary: Get a mailing list by ID
      tags:
      - lists
    put:
      description: Update a mailing list
      parameters:
      - description: List ID
        in: path
        name: listID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/github_com_headmail_headmail_pkg_api_admin_dto.UpdateListRequest'
        description: List to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain.List'
          description: OK
      summary: Update a mailing list
      tags:
      - lists
  /lists/{listID}/subscribers:
    get:
      description: List subscribers
      parameters:
      - description: Page number
        in: query
        name: page
        schema:
          type: integer
      - description: Number of items per page
        in: query
        name: limit
        schema:
          type: integer
      - description: Filter by status
        in: query
        name: status
        schema:
          type: string
      - description: Search term
        in: query
        name: search
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_admin.PaginatedListResponse-domain_Subscriber'
          description: OK
      summary: List subscribers
      tags:
      - subscribers
    post:
      description: Add subscribers to a list
      parameters:
      - description: List ID
        in: path
        name: listID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_admin.CreateSubscribersRequest'
        description: Subscribers to add
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_admin.EmptyResponse'
          description: Created
      summary: Add subscribers to a list
      tags:
      - subscribers
  /subscribers:
    get:
      description: List subscribers
      parameters:
      - description: Page number
        in: query
        name: page
        schema:
          type: integer
      - description: Number of items per page
        in: query
        name: limit
        schema:
          type: integer
      - description: Filter by status
        in: query
        name: status
        schema:
          type: string
      - description: Search term
        in: query
        name: search
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_admin.PaginatedListResponse-domain_Subscriber'
          description: OK
      summary: List subscribers
      tags:
      - subscribers
  /subscribers/{subscriberID}:
    delete:
      description: Delete a subscriber
      parameters:
      - description: Subscriber ID
        in: path
        name: subscriberID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_admin.DeleteResponse'
          description: OK
      summary: Delete a subscriber
      tags:
      - subscribers
    get:
      description: Get a subscriber by ID
      parameters:
      - description: Subscriber ID
        in: path
        name: subscriberID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain.Subscriber'
          description: OK
      summary: Get a subscriber by ID
      tags:
      - subscribers
    put:
      description: Update a subscriber
      parameters:
      - description: Subscriber ID
        in: path
        name: subscriberID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/github_com_headmail_headmail_pkg_api_admin_dto.UpdateSubscriberRequest'
        description: Subscriber to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain.Subscriber'
          description: OK
      summary: Update a subscriber
      tags:
      - subscribers
  /templates:
    get:
      description: List all templates
      parameters:
      - description: Page number
        in: query
        name: page
        schema:
          type: integer
      - description: Number of items per page
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_admin.PaginatedListResponse-domain_Template'
          description: OK
      summary: List all templates
      tags:
      - templates
    post:
      description: Create a new template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/github_com_headmail_headmail_pkg_api_admin_dto.CreateTemplateRequest'
        description: Template to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain.Template'
          description: Created
      summary: Create a new template
      tags:
      - templates
  /templates/{templateID}:
    delete:
      description: Delete a template
      parameters:
      - description: Template ID
        in: path
        name: templateID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_admin.DeleteResponse'
          description: OK
      summary: Delete a template
      tags:
      - templates
    get:
      description: Get a template by ID
      parameters:
      - description: Template ID
        in: path
        name: templateID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain.Template'
          description: OK
      summary: Get a template by ID
      tags:
      - templates
    put:
      description: Update a template
      parameters:
      - description: Template ID
        in: path
        name: templateID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/github_com_headmail_headmail_pkg_api_admin_dto.UpdateTemplateRequest'
        description: Template to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain.Template'
          description: OK
      summary: Update a template
      tags:
      - templates
  /tx:
    post:
      description: Create a new transactional delivery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/github_com_headmail_headmail_pkg_api_admin_dto.CreateTransactionalDeliveryRequest'
        description: Transactional delivery to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain.Delivery'
          description: Created
      summary: Create a new transactional delivery
      tags:
      - deliveries
  /tx/{deliveryID}:
    get:
      description: Get a delivery by ID
      parameters:
      - description: Delivery ID
        in: path
        name: deliveryID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain.Delivery'
          description: OK
      summary: Get a delivery by ID
      tags:
      - deliveries
servers:
- url: /api
