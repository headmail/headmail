{{- /*
Backend Deployment
*/ -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "headmail.fullname" . }}-backend
  labels:
    app.kubernetes.io/name: {{ include "headmail.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.backend.replicaCount | default 1 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "headmail.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      component: backend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "headmail.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        component: backend
      annotations:
        checksum/config: {{ include "headmail.configChecksum" $ | quote }}
    spec:
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ default (include "headmail.serviceAccountName" .) .Values.serviceAccount.name }}
      {{- end }}
      {{- if not .Values.serviceAccount.create }}
      automountServiceAccountToken: {{ default true .Values.serviceAccount.automountServiceAccountToken }}
      {{- end }}
      imagePullSecrets:
      {{- range .Values.imagePullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{ if .Values.nodeSelector }}
      nodeSelector: {{ toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{ if .Values.tolerations }}
      tolerations: {{ toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      {{ if .Values.affinity }}
      affinity: {{ toYaml .Values.affinity | nindent 8 }}
      {{- end }}
      initContainers:
        - name: fix-permissions
          image: {{ include "headmail.image" (dict "context" . "image" .Values.backend.image) | quote }}
          imagePullPolicy: {{ .Values.backend.image.pullPolicy | quote }}
          securityContext:
            runAsUser: 0
          command:
            - /bin/sh
            - -c
            - |
              set -eux
              chown -R headmail:headmail /app/data || true
          volumeMounts:
            - name: data
              mountPath: /app/data
      containers:
        - name: headmail
          image: {{ include "headmail.image" (dict "context" . "image" .Values.backend.image) | quote }}
          imagePullPolicy: {{ .Values.backend.image.pullPolicy | quote }}
          command: ["/app/headmail", "--config", "/app/config/config.yaml"]
          ports:
            - name: public
              containerPort: {{ .Values.backend.containerPorts.publicPort | default 8080 }}
            - name: admin
              containerPort: {{ .Values.backend.containerPorts.adminPort | default 8081 }}
          env:
            {{- range $k, $v := .Values.backend.env }}
            - name: {{ $k }}
              value: {{ $v | quote }}
            {{- end }}
            {{- range $name, $value := .Values.secretEnv.env }}
            - name: {{ $name | quote }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "headmail.secret.name" $ | quote }}
                  key: {{ $name | quote }}
            {{- end }}
            - name: "HEADMAIL_SERVER_PUBLIC_URL"
              value: {{ default .Values.ingress.public.host .Values.config.server.public.url | quote }}
          {{- if .Values.backend.resources }}
          resources: {{ toYaml .Values.backend.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.backend.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /api/healthz
              port: admin
            initialDelaySeconds: {{ .Values.backend.livenessProbe.initialDelaySeconds | default 10 }}
            periodSeconds: {{ .Values.backend.livenessProbe.periodSeconds | default 10 }}
          {{- end }}
          {{- if .Values.backend.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /api/healthz
              port: admin
            initialDelaySeconds: {{ .Values.backend.readinessProbe.initialDelaySeconds | default 3 }}
            periodSeconds: {{ .Values.backend.readinessProbe.periodSeconds | default 5 }}
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: /app/config
            - name: data
              mountPath: /app/data
      volumes:
        - name: config
          configMap:
            name: {{ include "headmail.fullname" . }}-config
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "headmail.fullname" . }}-pvc
          {{- else }}
          emptyDir: {}
          {{- end }}
